clear;nlayer=8;                   %壳层数norder=2;                   %阶数ninitial=1;                 %初始阶数nembody=sqrt(1);wl=(1240/1.1492)*1e-9;landa=wl/nembody;          %波长nlanda=size(landa);eps_ag=load('C:\Users\ZWB\Documents\fll\Ag_AU\Ag_AU\Ag-Js.dat');         %银的介电常数  re_ag=interp1(1240./eps_ag(:,1),eps_ag(:,2),nembody*landa*1e9);im_ag=interp1(1240./eps_ag(:,1),eps_ag(:,3),nembody*landa*1e9);eps_au=load('C:\Users\ZWB\Documents\fll\Ag_AU\Ag_AU\Johnson_Au.txt');    %金的折射率  Au:Johnson_Au.txtre_au=interp1(1240./eps_au(:,1),eps_au(:,2),nembody*landa*1e9);im_au=interp1(1240./eps_au(:,1),eps_au(:,3),nembody*landa*1e9);nthick=zeros(1,nlayer+1);           %厚度nthick(1)=(20)*1e-9;nthick(2)=6*1e-9;nthick(3)=(20)*1e-9;nthick(4)=6*1e-9;nthick(5)=(20)*1e-9;nthick(6)=6*1e-9;nthick(7)=(20)*1e-9;nthick(8)=6*1e-9;nthick(9)=(0.335)*1e-9;n=ones(1,nlayer+2); %折射率eps_mole=2.25+ 0.03*1.1492^2/complex(1.1492^2-(1240e-9/landa)^2, -0.052*1240e-9/landa);eps_gra = 1.964 - 6.02^2/complex((1240e-9/landa)^2, 4.52*1240e-9/landa)+ 6.99*3.14^2/complex(3.14^2-(1240e-9/landa)^2, -7.99*1240e-9/landa)+1.69*4.03^2/complex(4.03^2-(1240e-9/landa)^2, -2.01*1240e-9/landa)+1.53*4.59^2/complex(4.59^2-(1240e-9/landa)^2, -0.88*1240e-9/landa)n(1)=sqrt(re_ag+1i*im_ag);n(3)=sqrt(re_ag+1i*im_ag);n(5)=sqrt(re_ag+1i*im_ag);n(7)=sqrt(re_ag+1i*im_ag);n(2)=sqrt(eps_mole);n(4)=sqrt(eps_mole);n(6)=sqrt(eps_mole);n(8)=sqrt(eps_mole);n(9)=sqrt(eps_gra);%n(3)=sqrt(re_ag);%+1i*im_ag);%n(2)=re_au(wlnode)+1i*im_au(wlnode);%n(2)=3.42;n(nlayer+2)=nembody;mu=zeros(1,nlayer+2);               %磁导率mu(1)=1;mu(2)=1;mu(3)=1;mu(4)=1;mu(5)=1;mu(6)=1;mu(7)=1;mu(8)=1;mu(9)=1;nvar=zeros(1,nlayer+1);equmatrixa=zeros(2*(nlayer+1));              %方程组矩阵[an bn cn dn 壳层系数]equmatrixb=zeros(2*(nlayer+1)); equcolvectora=zeros(2*(nlayer+1),1);             %方程组等式右侧列向量equcolvectorb=zeros(2*(nlayer+1),1);solution1=zeros(2*(nlayer+1),norder);      %行列式解法solution2=zeros(2*(nlayer+1),norder);      %行列式解法%solution1=zeros(4*(nlayer+1));     %matlab直接求解%solution2=zeros(4*(nlayer+1));     %LU分解（Gauss消去分解）%solution3=zeros(4*(nlayer+1));     %QR分解m=zeros(1,nlayer+1);for i0=1:nlayer+1    m(i0)=n(i0)/n(nlayer+2);                      %相对折射率endradius=0;for i2=1:nlayer+1    radius=radius+nthick(i2);    nvar(i2)=2*pi/landa*radius;           %自变量x=krendd1=radius*1.5;d2=d1;nmesh1=200;nmesh2=200;x=-d1:d1/nmesh1:d1;z=-d2:d2/nmesh2:d2;for i3=1:norder    if nlayer>=1    for i1=1:nlayer+1        if i1>1            if i1<nlayer+1                equmatrixa(2*(i1-1)+1,2*(i1-1)+1)=m(i1+1)*drbessel1(i3,m(i1)*nvar(i1));                equmatrixa(2*(i1-1)+1,2*(i1-1)+2)=-m(i1+1)*drbessel2(i3,m(i1)*nvar(i1));                equmatrixa(2*(i1-1)+1,2*(i1-1)+3)=-m(i1)*drbessel1(i3,m(i1+1)*nvar(i1));                equmatrixa(2*(i1-1)+1,2*(i1-1)+4)=m(i1)*drbessel2(i3,m(i1+1)*nvar(i1));                equmatrixa(2*(i1-1)+2,2*(i1-1)+1)=mu(i1+1)*rbessel1(i3,m(i1)*nvar(i1));                equmatrixa(2*(i1-1)+2,2*(i1-1)+2)=-mu(i1+1)*rbessel2(i3,m(i1)*nvar(i1));                equmatrixa(2*(i1-1)+2,2*(i1-1)+3)=-mu(i1)*rbessel1(i3,m(i1+1)*nvar(i1));                equmatrixa(2*(i1-1)+2,2*(i1-1)+4)=mu(i1)*rbessel2(i3,m(i1+1)*nvar(i1));                                equmatrixb(2*(i1-1)+1,2*(i1-1)+1)=m(i1+1)*rbessel1(i3,m(i1)*nvar(i1));                equmatrixb(2*(i1-1)+1,2*(i1-1)+2)=-m(i1+1)*rbessel2(i3,m(i1)*nvar(i1));                equmatrixb(2*(i1-1)+1,2*(i1-1)+3)=-m(i1)*rbessel1(i3,m(i1+1)*nvar(i1));                equmatrixb(2*(i1-1)+1,2*(i1-1)+4)=m(i1)*rbessel2(i3,m(i1+1)*nvar(i1));                equmatrixb(2*(i1-1)+2,2*(i1-1)+1)=mu(i1+1)*drbessel1(i3,m(i1)*nvar(i1));                equmatrixb(2*(i1-1)+2,2*(i1-1)+2)=-mu(i1+1)*drbessel2(i3,m(i1)*nvar(i1));                equmatrixb(2*(i1-1)+2,2*(i1-1)+3)=-mu(i1)*drbessel1(i3,m(i1+1)*nvar(i1));                equmatrixb(2*(i1-1)+2,2*(i1-1)+4)=mu(i1)*drbessel2(i3,m(i1+1)*nvar(i1));                       else                equmatrixa(2*(i1-1)+1,1)=m(i1)*drbessel3(i3,1,nvar(i1));                equmatrixa(2*(i1-1)+1,2*(i1-1)+1)=drbessel1(i3,m(i1)*nvar(i1));                equmatrixa(2*(i1-1)+1,2*(i1-1)+2)=-drbessel2(i3,m(i1)*nvar(i1));                equmatrixa(2*(i1-1)+2,1)=mu(i1)*rbessel3(i3,1,nvar(i1));                equmatrixa(2*(i1-1)+2,2*(i1-1)+1)=mu(i1+1)*rbessel1(i3,m(i1)*nvar(i1));                equmatrixa(2*(i1-1)+2,2*(i1-1)+2)=-mu(i1+1)*rbessel2(i3,m(i1)*nvar(i1));                                equmatrixb(2*(i1-1)+1,1)=m(i1)*rbessel3(i3,1,nvar(i1));                equmatrixb(2*(i1-1)+1,2*(i1-1)+1)=rbessel1(i3,m(i1)*nvar(i1));                equmatrixb(2*(i1-1)+1,2*(i1-1)+2)=-rbessel2(i3,m(i1)*nvar(i1));                equmatrixb(2*(i1-1)+2,1)=mu(i1)*drbessel3(i3,1,nvar(i1));                equmatrixb(2*(i1-1)+2,2*(i1-1)+1)=mu(i1+1)*drbessel1(i3,m(i1)*nvar(i1));                equmatrixb(2*(i1-1)+2,2*(i1-1)+2)=-mu(i1+1)*drbessel2(i3,m(i1)*nvar(i1));            end        else            equmatrixa(1,2)=m(2)*drbessel1(i3,m(1)*nvar(1));             equmatrixa(1,3)=-m(1)*drbessel1(i3,m(2)*nvar(1));             equmatrixa(1,4)=m(1)*drbessel2(i3,m(2)*nvar(1));            equmatrixa(2,2)=mu(2)*rbessel1(i3,m(1)*nvar(1));             equmatrixa(2,3)=-mu(1)*rbessel1(i3,m(2)*nvar(1));             equmatrixa(2,4)=mu(1)*rbessel2(i3,m(2)*nvar(1));                        equmatrixb(1,2)=m(2)*rbessel1(i3,m(1)*nvar(1));            equmatrixb(1,3)=-m(1)*rbessel1(i3,m(2)*nvar(1));             equmatrixb(1,4)=m(1)*rbessel2(i3,m(2)*nvar(1));             equmatrixb(2,2)=mu(2)*drbessel1(i3,m(1)*nvar(1));             equmatrixb(2,3)=-mu(1)*drbessel1(i3,m(2)*nvar(1));             equmatrixb(2,4)=mu(1)*drbessel2(i3,m(2)*nvar(1));         end    end    else        equmatrixa(1,1)=m(1)*drbessel3(i3,1,nvar(1));        equmatrixa(1,2)=drbessel1(i3,m(1)*nvar(1));        equmatrixb(1,1)=m(1)*rbessel3(i3,1,nvar(1));        equmatrixb(1,2)=rbessel1(i3,m(1)*nvar(1));        equmatrixa(2,1)=mu(1)*rbessel3(i3,1,nvar(1));        equmatrixa(2,2)=mu(2)*rbessel1(i3,m(1)*nvar(1));        equmatrixb(2,1)=mu(1)*drbessel3(i3,1,nvar(1));        equmatrixb(2,2)=mu(2)*drbessel1(i3,m(1)*nvar(1));    end    equcolvectora(2*nlayer+1,1)=m(nlayer+1)*drbessel1(i3,nvar(nlayer+1));    equcolvectora(2*nlayer+2,1)=mu(nlayer+1)*rbessel1(i3,nvar(nlayer+1));        equcolvectorb(2*nlayer+1,1)=m(nlayer+1)*rbessel1(i3,nvar(nlayer+1));    equcolvectorb(2*nlayer+2,1)=mu(nlayer+1)*drbessel1(i3,nvar(nlayer+1));        ta=equmatrixa;    tb=equmatrixb;    deta=det(ta);    detb=det(tb);    for i=1:2*(nlayer+1)        ta1=ta;        ta1(:,i)=equcolvectora;        deta1=det(ta1);        solution1(i,i3)=deta1/deta;            tb1=tb;        tb1(:,i)=equcolvectorb;        detb1=det(tb1);        solution2(i,i3)=detb1/detb;           end    %solution1(:,i3,wlnode)=sym(equmatrix)\sym(equcolvector);         %[L,U]=lu(equmatrix);    %solution2(:,i3,wlnode)=sym(U)\(sym(L)\sym(equcolvector));    %[Q,C]=qr(equmatrix);    %solution3(:,i3,wlnode)=sym(C)\sym((Q)\equcolvector);endnEField=zeros(2*nmesh2+1,2*nmesh1+1);EFieldx=zeros(2*nmesh2+1,2*nmesh1+1);rbsl=zeros(norder,3);drbsl=zeros(norder,3);pin=zeros(norder,1);ton=zeros(norder,1);Er=0;Et=0;Ef=0;for i4=1:2*nmesh1+1    for j4=1:2*nmesh2+1        rad=sqrt(x(i4)^2+z(j4)^2);        if z(j4)==0            theta=pi/2;        else            theta=acos(z(j4)/rad);        end        phi=0;        pin(1)=1;        pin(2)=3*cos(theta);        ton(1)=cos(theta);        ton(2)=6*(cos(theta))^2-3;        for l=3:norder            pin(l)=(2*l-1)/(l-1)*cos(theta)*pin(l-1)-l/(l-1)*pin(l-2);            ton(l)=l*cos(theta)*pin(l)-(l+1)*pin(l-1);        end        r1=0;        r2=0;        if rad>=radius            numlayer=nlayer+2;        else        for i6=1:nlayer+1            r1=r2;            r2=r2+nthick(i6);            if rad<r2&&rad>=r1                numlayer=i6;            end        end        end        if numlayer==1 || numlayer==nlayer+2            if numlayer==1            r=n(1)*2*pi/landa*rad;            if r==0                Er=0;                Et=0;                Ef=0;            else            rbsl(1,1)=sin(r)/r-cos(r);            drbsl(1,1)=sin(r)+(cos(r)-sin(r)/r)/r;            for l=2:norder                rbsl(l,1)=l*rbsl(l-1,1)/r-drbsl(l-1,1);                drbsl(l,1)=rbsl(l-1,1)-l*rbsl(l,1)/r;            end            for i5=ninitial:norder               %计算阶数                mo12=cos(phi)*pin(i5)*rbsl(i5,1)/r;                mo13=-sin(phi)*ton(i5)*rbsl(i5,1)/r;                ne11=cos(phi)*i5*(i5+1)*sin(theta)*pin(i5)*rbsl(i5,1)/r/r;                ne12=cos(phi)*ton(i5)*drbsl(i5,1)/r;                ne13=-sin(phi)*pin(i5)*drbsl(i5,1)/r;                Er=Er+(1i)^i5*(2*i5+1)/i5/(i5+1)*(-1i*solution1(2,i5)*ne11);                Et=Et+(1i)^i5*(2*i5+1)/i5/(i5+1)*(solution2(2,i5)*mo12-1i*solution1(2,i5)*ne12);                Ef=Ef+(1i)^i5*(2*i5+1)/i5/(i5+1)*(solution2(2,i5)*mo13-1i*solution1(2,i5)*ne13);            end            Ex=Er*sin(theta)*cos(phi)+Et*cos(theta)*cos(phi)-Ef*sin(phi);            Ey=Er*sin(theta)*sin(phi)+Et*cos(theta)*sin(phi)+Ef*cos(phi);            Ez=Er*cos(theta)-Et*sin(theta);            end            else                r=n(nlayer+2)*2*pi/landa*rad;                rbsl(1,1)=sin(r)/r-cos(r);                drbsl(1,1)=sin(r)+(cos(r)-sin(r)/r)/r;                rbsl(1,2)=sin(r)+cos(r)/r;                drbsl(1,2)=cos(r)-(sin(r)+cos(r)/r)/r;                for l=2:norder                    rbsl(l,1)=l*rbsl(l-1,1)/r-drbsl(l-1,1);                    drbsl(l,1)=rbsl(l-1,1)-l*rbsl(l,1)/r;                    rbsl(l,2)=l*rbsl(l-1,2)/r-drbsl(l-1,2);                    drbsl(l,2)=rbsl(l-1,2)-l*rbsl(l,2)/r;                end                rbsl(:,3)=rbsl(:,1)-1i*rbsl(:,2);                drbsl(:,3)=drbsl(:,1)-1i*drbsl(:,2);                for i5=ninitial:norder                    mo12=cos(phi)*pin(i5)*rbsl(i5,1)/r;                    mo13=-sin(phi)*ton(i5)*rbsl(i5,1)/r;                    ne11=cos(phi)*i5*(i5+1)*sin(theta)*pin(i5)*rbsl(i5,1)/r/r;                    ne12=cos(phi)*ton(i5)*drbsl(i5,1)/r;                    ne13=-sin(phi)*pin(i5)*drbsl(i5,1)/r;                    mo32=cos(phi)*pin(i5)*rbsl(i5,3)/r;                    mo33=-sin(phi)*ton(i5)*rbsl(i5,3)/r;                    ne31=cos(phi)*i5*(i5+1)*sin(theta)*pin(i5)*rbsl(i5,3)/r/r;                    ne32=cos(phi)*ton(i5)*drbsl(i5,3)/r;                    ne33=-sin(phi)*pin(i5)*drbsl(i5,3)/r;                    Er=Er+(1i)^i5*(2*i5+1)/i5/(i5+1)*(-1i*ne11+1i*solution1(1,i5)*ne31);                    Et=Et+(1i)^i5*(2*i5+1)/i5/(i5+1)*(mo12-1i*ne12+1i*solution1(1,i5)*ne32-solution2(1,i5)*mo32);                    Ef=Ef+(1i)^i5*(2*i5+1)/i5/(i5+1)*(mo13-1i*ne13+1i*solution1(1,i5)*ne33-solution2(1,i5)*mo33);                end                Ex=Er*sin(theta)*cos(phi)+Et*cos(theta)*cos(phi)-Ef*sin(phi);                Ey=Er*sin(theta)*sin(phi)+Et*cos(theta)*sin(phi)+Ef*cos(phi);                Ez=Er*cos(theta)-Et*sin(theta);            end        else                        r=n(numlayer)*2*pi/landa*rad;                        rbsl(1,1)=sin(r)/r-cos(r);                        drbsl(1,1)=sin(r)+(cos(r)-sin(r)/r)/r;                        rbsl(1,2)=sin(r)+cos(r)/r;                        drbsl(1,2)=cos(r)-(sin(r)+cos(r)/r)/r;                        for l=2:norder                            rbsl(l,1)=l*rbsl(l-1,1)/r-drbsl(l-1,1);                            drbsl(l,1)=rbsl(l-1,1)-l*rbsl(l,1)/r;                            rbsl(l,2)=l*rbsl(l-1,2)/r-drbsl(l-1,2);                            drbsl(l,2)=rbsl(l-1,2)-l*rbsl(l,2)/r;                        end                        for i5=ninitial:norder                            mo12=cos(phi)*pin(i5)*rbsl(i5,1)/r;                            mo13=-sin(phi)*ton(i5)*rbsl(i5,1)/r;                            ne11=cos(phi)*i5*(i5+1)*sin(theta)*pin(i5)*rbsl(i5,1)/r/r;                            ne12=cos(phi)*ton(i5)*drbsl(i5,1)/r;                            ne13=-sin(phi)*pin(i5)*drbsl(i5,1)/r;                            mo22=-cos(phi)*pin(i5)*rbsl(i5,2)/r;                            mo23=sin(phi)*ton(i5)*rbsl(i5,2)/r;                            ne21=-cos(phi)*i5*(i5+1)*sin(theta)*pin(i5)*rbsl(i5,2)/r/r;                            ne22=-cos(phi)*ton(i5)*drbsl(i5,2)/r;                            ne23=sin(phi)*pin(i5)*drbsl(i5,2)/r;                            Er=Er+(1i)^i5*(2*i5+1)/i5/(i5+1)*(-1i*solution1(2*numlayer-1,i5)*ne11-1i*solution1(2*numlayer,i5)*ne21);                            Et=Et+(1i)^i5*(2*i5+1)/i5/(i5+1)*(solution2(2*numlayer-1,i5)*mo12-1i*solution1(2*numlayer-1,i5)*ne12+solution2(2*numlayer,i5)*mo22-1i*solution1(2*numlayer,i5)*ne22);                            Ef=Ef+(1i)^i5*(2*i5+1)/i5/(i5+1)*(solution2(2*numlayer-1,i5)*mo13-1i*solution1(2*numlayer-1,i5)*ne13+solution2(2*numlayer,i5)*mo23-1i*solution1(2*numlayer,i5)*ne23);                         end                        Ex=Er*sin(theta)*cos(phi)+Et*cos(theta)*cos(phi)-Ef*sin(phi);                        Ey=Er*sin(theta)*sin(phi)+Et*cos(theta)*sin(phi)+Ef*cos(phi);                        Ez=Er*cos(theta)-Et*sin(theta);        end        nEField(j4,i4)=sqrt(abs(Er)^2+abs(Et)^2+abs(Ef)^2);        EFieldx(j4,i4)=real(Ex);        Er=0;        Et=0;        Ef=0;    endendenergy_normalized=0;for i4=1:2*nmesh1+1    for j4=1:2*nmesh2+1        rad=sqrt(x(i4)^2+z(j4)^2);        if rad>=radius                numlayer=nlayer+2;        else        r1=0;        r2=0;        for i6=1:nlayer+1            r1=r2;            r2=r2+nthick(i6);            if rad<r2&&rad>=r1                numlayer=i6;            end        end        end        if numlayer==2            energy_normalized=energy_normalized+nEField(j4,i4)*(d1/nmesh1*d2/nmesh2)/pi/(radius^2);        end    endendfigure(1)h1=surf(x,z,nEField);xlabel('x')ylabel('z')set(h1,{'LineStyle'},{'none'})view(90,90)output=nEField;save('C:\Users\ZWB\Documents\fll\EField_matrix.txt','output','-ASCII');output=zeros((2*nmesh1+1)*(2*nmesh2+1),3);for i4=1:2*nmesh1+1    for j4=1:2*nmesh2+1        output((2*nmesh2+1)*(i4-1)+j4,1)=x(i4);        output((2*nmesh2+1)*(i4-1)+j4,2)=z(j4);        output((2*nmesh2+1)*(i4-1)+j4,3)=nEField(j4,i4);    endendsave('C:\Users\ZWB\Documents\fll\EField_column.txt','output','-ASCII')
